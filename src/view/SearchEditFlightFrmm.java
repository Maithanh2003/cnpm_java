/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

/**
 *
 * @author apple
 */
import DAO.FlightDAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Flight;
public class SearchEditFlightFrmm extends javax.swing.JFrame {
private FlightDAO flightDAO;
    private JTextField idText;
    private JButton btnSearch;
    private JButton btnEdit;
    private JTable flightTable;

    /**
     * Creates new form SearchEditFlightFrmm
     */
    public SearchEditFlightFrmm() {
        customInit();
        Connection dbConnect = FlightDAO.GetJDBCConnection();
        flightDAO = new FlightDAO();
    }
private void customInit() {
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLayout(null);

        JLabel jLabel1 = new JLabel("Tìm kiếm chuyến bay");
        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24));
        jLabel1.setBounds(200, 20, 250, 30);
        add(jLabel1);

        JLabel jLabel2 = new JLabel("ID chuyến bay:");
        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13));
        jLabel2.setBounds(50, 80, 100, 20);
        add(jLabel2);

        idText = new JTextField();
        idText.setBounds(160, 80, 150, 25);
        add(idText);

        btnSearch = new JButton("Tìm");
        btnSearch.setBackground(new java.awt.Color(255, 204, 204));
        btnSearch.setFont(new java.awt.Font("Helvetica Neue", 1, 13));
        btnSearch.setBounds(330, 80, 80, 25);
        btnSearch.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnSearchActionPerformed(e);
            }
        });
        add(btnSearch);

        btnEdit = new JButton("Chỉnh sửa");
        btnEdit.setBackground(new java.awt.Color(255, 204, 204));
        btnEdit.setFont(new java.awt.Font("Helvetica Neue", 1, 13));
        btnEdit.setBounds(450, 80, 100, 25);
        btnEdit.setEnabled(false);
        btnEdit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnEditActionPerformed(e);
            }
        });
        add(btnEdit);

        flightTable = new JTable();
        flightTable.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{"ID", "Tên chuyến bay", "Khởi hành", "Điểm đến", "Thời gian"}
        ));
        JScrollPane jScrollPane2 = new JScrollPane();
        jScrollPane2.setBounds(50, 130, 500, 300);
        jScrollPane2.setViewportView(flightTable);
        add(jScrollPane2);

        setSize(600, 500);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    private void btnSearchActionPerformed(ActionEvent evt) {
        try {
            int flightId = Integer.parseInt(idText.getText());
            Flight flight = flightDAO.getFlightById(flightId);
            if (flight != null) {
                DefaultTableModel model = (DefaultTableModel) flightTable.getModel();
                model.setRowCount(0); // Clear table
                model.addRow(new Object[]{flight.getId(), flight.getName(), flight.getDeparture(), flight.getArrival(), flight.getDuration()});
                btnEdit.setEnabled(true); // Enable edit button
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy chuyến bay với ID đã nhập", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                btnEdit.setEnabled(false); // Disable edit button if flight not found
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ID chuyến bay phải là một số nguyên", "Lỗi", JOptionPane.ERROR_MESSAGE);
            btnEdit.setEnabled(false); // Disable edit button if invalid ID
        }
    }
    
    private void btnEditActionPerformed(ActionEvent evt) {
    try {
        // Lấy thông tin của chuyến bay từ bảng
        int selectedRow = flightTable.getSelectedRow();
        if (selectedRow != -1) {
            int flightId = (int) flightTable.getValueAt(selectedRow, 0);
            Flight flight = flightDAO.getFlightById(flightId);
            if (flight != null) {
                // Mở EditFrm và truyền thông tin của chuyến bay vào
                EditFrm editFrm = new EditFrm(flight);
                editFrm.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy chuyến bay với ID đã chọn", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một chuyến bay để chỉnh sửa", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchEditFlightFrmm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
